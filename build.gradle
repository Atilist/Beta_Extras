buildscript {
	repositories {
		maven {
			url = "https://maven.glass-launcher.net/snapshots"
		}
		maven {
			name = "Fabric"
			url = "https://maven.fabricmc.net/"
		}
		mavenCentral()
		maven {
			name = "Jitpack"
			url 'https://jitpack.io/'
		}
	}
	dependencies {
		classpath 'net.fabricmc:fabric-loom:0.2.8-SNAPSHOT'
	}
}

plugins {
	id 'maven-publish'
}

apply plugin: "fabric-loom"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

idea {
	module {
		downloadJavadoc = true
	}
}

eclipse {
	classpath {
		downloadJavadoc = true
	}
}

repositories {
	maven {
		url "https://maven.glass-launcher.net/snapshots"
	}
	maven {
		name = 'Froge'
		url 'https://maven.minecraftforge.net/'
	}
	maven {
		name = "Jitpack"
		url "https://jitpack.io/"
	}
}

minecraft {
	addLibraryFilter {library ->
		return !(library.startsWith('net.minecraft:launchwrapper:') ||
				library.startsWith('net.sf.jopt-simple:jopt-simple:') ||
				library.startsWith('org.ow2.asm:asm-all:'))
	}
}

dependencies {
	// fabric loader requires log4j, guava, and gson
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.0'
	annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.0'

	// to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings loom.fromCommit("calmilamsy/BIN-Mappings", "${project.yarn_mappings}") {spec ->
		spec.version = "b1.7.3-${project.yarn_mappings}"
	}

	// convenience stuff
	// adds some useful annotations for data classes. does not add any dependencies
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	// adds some useful annotations for miscellaneous uses. does not add any dependencies, though people without the lib will be missing some useful context hints.
	implementation 'org.jetbrains:annotations:16.0.2'

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation("net.modificationstation:StationAPI:${project.stapi_version}") {
		exclude module: "cursed-fabric-loader"
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
	from javadoc
	classifier = 'javadoc'
}

tasks.publishToMavenLocal.dependsOn(tasks.remapJar)

publishing {
	repositories {
		mavenLocal()
	}

	publications {
		mavenJava(MavenPublication) {
			artifactId project.archives_base_name
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") {
				classifier null
				builtBy remapJar
			}

			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") {
				classifier 'dev'
				builtBy remapJar
			}
			pom.withXml {
				asNode().dependencies.dependency.each { dep ->
					if(dep.artifactId.last().value().last().toLowerCase() in ["cursed-fabric-loader", "stationapi"]) {
						assert dep.parent().remove(dep)
					}
				}
			}
		}
	}
}